{"name": "test_expected_to_fail", "status": "skipped", "statusDetails": {"message": "XFAIL 预期此功能会失败或尚未实现\n\nAssertionError: 预期状态码为400，实际为200\nassert 200 == 400\n +  where 200 = <Response [200]>.status_code", "trace": "base_url = 'https://jsonplaceholder.typicode.com'\n\n    @pytest.mark.xfail(reason=\"预期此功能会失败或尚未实现\")\n    def test_expected_to_fail(base_url):\n        \"\"\"标记为 xfail (Expected Failure)，如果它失败了，测试结果是 XFAIL，如果意外成功了，是 XPASS\"\"\"\n        print(f\"\\n[Thread: {threading.current_thread().name}] Running test_expected_to_fail\")\n        # 假设我们期望删除一个不存在的资源会返回 400 而不是 404\n        response = requests.delete(f\"{base_url}/posts/99999\")\n        # 这个断言会失败（因为实际返回 404 或其他），但因为 xfail，测试不算作失败\n>       assert response.status_code == 400, f\"预期状态码为400，实际为{response.status_code}\"\nE       AssertionError: 预期状态码为400，实际为200\nE       assert 200 == 400\nE        +  where 200 = <Response [200]>.status_code\n\ntest_api_posts.py:108: AssertionError"}, "description": "标记为 xfail (Expected Failure)，如果它失败了，测试结果是 XFAIL，如果意外成功了，是 XPASS", "attachments": [{"name": "stdout", "source": "a63df49b-a460-4ccd-a5f9-ae01328afa03-attachment.txt", "type": "text/plain"}], "start": 1745633385501, "stop": 1745633386185, "uuid": "6e91876b-4681-4a53-8f21-f738b779e78d", "historyId": "694186276285007ba5652da827a2e14c", "testCaseId": "694186276285007ba5652da827a2e14c", "fullName": "test_api_posts#test_expected_to_fail", "labels": [{"name": "tag", "value": "@pytest.mark.xfail(reason='预期此功能会失败或尚未实现')"}, {"name": "suite", "value": "test_api_posts"}, {"name": "host", "value": "192.168.1.5"}, {"name": "thread", "value": "60617-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_api_posts"}]}